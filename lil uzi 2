create or replace trigger trg_employeeAudit
before update or insert or delete on employees
for each row
enable
begin
    if inserting then
        insert into emp_audit values ('insert',:NEW.employee_id,sysdate,sys_context('USERENV','CURRENT_USER'),NULL,NULL);
    elsif updating then
        insert into emp_audit values ('update',:NEW.employee_id,sysdate,sys_context('USERENV','CURRENT_USER'),'first name=' || :OLD.first_name,'first name=' || :NEW.first_name);
    elsif deleting then
        insert into emp_audit values ('delete',:OLD.employee_id,sysdate,sys_context('USERENV','CURRENT_USER'),NULL,NULL);
    end if;
END;
/


create or replace trigger trg_cascadeTrigger
after insert or update or delete on employees
for each row
declare
v_count number;
begin
    if (INSERTING or UPDATING) then
        select count(*)
        into v_count
        from DEPARTMENTS
        where department_id = :NEW.department_id;
    
    if v_count = 0 then
--        rollback to audit_recorded;
--        rollback to emp_operation;
        raise_application_error(-20001, 'cascading trigger disallowed this.................');
    end if;
    
    end if;
END;
/

select * from employees;

savepoint emp_operation;
update employees set first_name='ski',department_id=0 where employee_id=101;

select * from emp_audit;
